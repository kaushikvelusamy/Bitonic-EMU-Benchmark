# For the output files generated by runTests_EMU.sh, this python script generates the CSV File. 
# Just update the filenames out and output.csv below line 8 and line 52


import csv
final_arr = []
entry_arr = []
with open("out") as outfile:
    for line_num,line in enumerate(outfile):
        if line_num % 8 == 0: 
            print len(entry_arr)
            final_arr.append(entry_arr)
            entry_arr = []
            val_arr = []
        #print line
        if line.startswith( 'time' ):
            time_arr = line.split()
            entry_arr.append(time_arr[1])
            entry_arr.append(time_arr[5])
            entry_arr.append(time_arr[7])
            entry_arr.append(time_arr[9])
            entry_arr.append(time_arr[11])
            if time_arr[-1] == "-s":
                entry_arr.append("Dumb")
            else:
                entry_arr.append("Smart")
            #print time_arr
        elif line.startswith('N'):
            N_arr = line.split()
            N_arr = N_arr[1::2]
            entry_arr += N_arr
            #print N_arr
        elif line.startswith('start'):
            start_arr = line.split()
            entry_arr.append(start_arr[1])
            entry_arr.append(start_arr[3])
            entry_arr.append(start_arr[5])
            entry_arr.append(start_arr[7])
            entry_arr.append(start_arr[-1])
            #print start_arr
        elif 'PASS' in line or 'FAIL' in line:
            pass_arr = [line.strip()]
            entry_arr += pass_arr
        elif 'real' in line or 'user' in line or 'sys' in line:
            val = line.strip()
            val_arr.append(val)
            entry_arr.append(val)
final_arr.remove([])
print final_arr
heading_arr = ['SingleOrMulti', 'NormalOrRecOrRecLinear', 'lgN', 'RemapThreads', 'ComparisonThreads', 'SmartOrDumb', 'DatasetSize', 'NumNodes', 'lgN', 'lgP', 'lgE', 'starttime', 'startnlet1', 'endTime', 'endnlet2', 'TotalTime', 'Result', 'real', 'user', 'sys']
final_arr = [heading_arr] + final_arr
with open("output.csv", "wb") as f:
    writer = csv.writer(f)
    writer.writerows(final_arr)
